---
- name: Deploy Wordpress
  hosts: all
  become: yes
  vars_files:
    - /vagrant/vars.yaml

  tasks:
    - name: Update APT
      apt:
        update_cache: yes
        cache_valid_time: 86400
        upgrade: 'yes'        

    - name: Install packages
      apt:
        name: 
        - python3-mysqldb
        - nginx
        - mysql-server
        - php-fpm
        - php-mysql
        - php-curl
        - php-gd
        - php-intl
        - php-mbstring
        - php-soap
        - php-xml
        - php-xmlrpc
        - php-zip
          
    - name: Configure firewall
      ufw:
        rule: allow
        name: "Nginx Full"
        state: enabled
    
    - name:
      template:
        src: "/vagrant/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ wp_conf_dir }}"

    - name: Enable Nginx configuration
      file:
        src: "/etc/nginx/sites-available/{{ wp_conf_dir }}"  
        dest: "/etc/nginx/sites-enabled/{{ wp_conf_dir }}"
        state: link

    - name: Unlink default Nginx
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Restart Nginx  
  
    - name: Set root password in MYSQL
      mysql_user:
        name: root
        password: "{{ mysql_password }}"
        login_user: root
        login_password: "{{ mysql_password }}"
        login_unix_socket: "/var/run/mysqld/mysqld.sock"

    - name: Remove all MYSQL anonymous users
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_password }}"
  
    - name: Remove MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_password }}"

    - name: Create new database
      mysql_db:
        name: "wordpress"
        state: present
        login_user: root
        login_password: "{{ mysql_password }}"

    - name: Create WordPress user
      mysql_user:
        name: "wordpressuser"
        password: "{{ wp_database_password }}"
        priv: "*.*:ALL,GRANT"
        state: present
        login_user: root
        login_password: "{{ mysql_password }}"

    - name: Create directory
      file:
        path: "/var/www/{{ wp_conf_dir }}"
        state: directory

    - name: Check WordPress file existance
      stat:
        path: "/tmp/{{ wp_file }}"
      register: wp

    - name: Download WordPress zip
      get_url:
        url: "https://wordpress.org/{{ wp_file }}"
        dest: /tmp/
      when: not wp.stat.exists

    - name: Extract WordPress
      unarchive:
        src: "/tmp/{{ wp_file }}"
        dest: "/var/www/"
        
    - name: Copy wp-config file to wordpress directory
      copy:
        src: "/vagrant/wp-config.php"
        dest: "/var/www/{{ wp_conf_dir }}/wp-config.php"
        
    - name: Install WP-CLI
      get_url:
        url: "{{ wp_cli_url }}"
        dest: /tmp/

    - name: Set WP-CLI Permission
      shell: |
        chmod +x /tmp/{{ wp_cli_file }} 
        mv /tmp/{{ wp_cli_file }} /usr/local/bin/wp

    - name: Configure WordPress
      shell: |
        wp core install --url="192.168.50.2" --title="WordPress Setup" --admin_user=admin --admin_email=admin@test.com --admin_password="!2three456." --path=/var/www/wordpress --allow-root
        wp theme install "twentynineteen" --activate --path=/var/www/wordpress --allow-root
  
    - name: Setup privileges
      file: 
        dest: "/var/www/{{ wp_conf_dir }}" 
        owner: www-data 
        group: www-data 
        recurse: yes

  handlers:
    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted