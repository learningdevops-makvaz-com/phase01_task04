---
- name: Deploy Wordpress
  hosts: all
  become: yes
  vars_files:
    - /vagrant/vars.yaml

  tasks:
    - name: Update APT
      apt:
        update_cache: yes
        cache_valid_time: 86400
        upgrade: 'yes'        

    - name: Install packages
      apt:
        name: ['python3-mysqldb', 'nginx', 'mysql-server', 'php-fpm', 'php-mysql', 'php-curl', 'php-gd', 'php-intl', 'php-mbstring', 'php-soap', 'php-xml', 'php-xmlrpc', 'php-zip']
          
    - name: Configure firewall
      command: ufw allow 'Nginx Full'
    
    - name:
      template:
        src: "/vagrant/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ wp_conf }}"

    - name: Enable Nginx configuration
      file:
        src: "/etc/nginx/sites-available/{{ wp_conf }}"  
        dest: "/etc/nginx/sites-enabled/{{ wp_conf }}"
        state: link

    - name: Unlink default Nginx
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Restart Nginx  
  
    - name: Set root password in MYSQL
      mysql_user:
        name: root
        password: "{{ mysql_password }}"
        login_user: root
        login_password: "{{ mysql_password }}"
        login_host: "localhost"
        login_unix_socket: "/var/run/mysqld/mysqld.sock"

    - name: Remove all MYSQL anonymous users
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_password }}"
  
    - name: Remove MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_password }}"

    - name: Create new database
      mysql_db:
        login_user: root
        login_password: "{{ mysql_password }}"
        name: "wordpress"
        state: present

    - name: Create WordPress user
      mysql_user:
        name: "wordpressuser"
        password: "{{ wp_database_password }}"
        priv: "*.*:ALL,GRANT"
        state: present
        login_user: root
        login_password: "{{ mysql_password }}"

    - name: Create directory
      file:
        path: "/var/www/wordpress"
        state: directory

    - name: Download WordPress zip
      get_url:
        url: "https://wordpress.org/{{ wp_file }}"
        dest: /tmp/

    - name: Extract WordPress
      unarchive:
        src: "/tmp/{{ wp_file }}"
        dest: "/var/www/"
        
    - name: Copy wp-config file to wordpress directory
      copy:
        src: "/vagrant/wp-config.php"
        dest: "/var/www/wordpress/wp-config.php"
        
    - name: Setup privileges
      file: 
        dest: "/var/www/wordpress" 
        owner: www-data 
        group: www-data 
        recurse: yes

  handlers:
    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted